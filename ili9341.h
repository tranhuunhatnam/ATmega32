#ifndef ILI9341_H_
#define ILI9341_H_

#define ILI9341_CMD_NOP					                    0x00
#define ILI9341_CMD_SOFTWARE_RESET			            0x01
#define ILI9341_CMD_READ_DISP_ID			              0x04
#define ILI9341_CMD_READ_DISP_STATUS			          0x09
#define ILI9341_CMD_READ_DISP_POWER_MODE		        0x0A
#define ILI9341_CMD_READ_DISP_MADCTRL			          0x0B
#define ILI9341_CMD_READ_DISP_PIXEL_FORMAT		      0x0C
#define ILI9341_CMD_READ_DISP_IMAGE_FORMAT		      0x0D
#define ILI9341_CMD_READ_DISP_SIGNAL_MODE		        0x0E
#define ILI9341_CMD_READ_DISP_SELF_DIAGNOSTIC		    0x0F
#define ILI9341_CMD_ENTER_SLEEP_MODE			          0x10
#define ILI9341_CMD_SLEEP_OUT				                0x11
#define ILI9341_CMD_PARTIAL_MODE_ON			            0x12
#define ILI9341_CMD_NORMAL_DISP_MODE_ON			        0x13
#define ILI9341_CMD_DISP_INVERSION_OFF			        0x20
#define ILI9341_CMD_DISP_INVERSION_ON			          0x21
#define ILI9341_CMD_GAMMA_SET				                0x26
#define ILI9341_CMD_DISPLAY_OFF				              0x28
#define ILI9341_CMD_DISPLAY_ON				              0x29
#define ILI9341_CMD_COLUMN_ADDRESS_SET			        0x2A
#define ILI9341_CMD_PAGE_ADDRESS_SET			          0x2B
#define ILI9341_CMD_MEMORY_WRITE			              0x2C
#define ILI9341_CMD_COLOR_SET				                0x2D
#define ILI9341_CMD_MEMORY_READ				              0x2E
#define ILI9341_CMD_PARTIAL_AREA			              0x30
#define ILI9341_CMD_VERT_SCROLL_DEFINITION		      0x33
#define ILI9341_CMD_TEARING_EFFECT_LINE_OFF		      0x34
#define ILI9341_CMD_TEARING_EFFECT_LINE_ON		      0x35
#define ILI9341_CMD_MEMORY_ACCESS_CONTROL		        0x36
#define ILI9341_CMD_VERT_SCROLL_START_ADDRESS		    0x37
#define ILI9341_CMD_IDLE_MODE_OFF			              0x38
#define ILI9341_CMD_IDLE_MODE_ON			              0x39
#define ILI9341_CMD_COLMOD_PIXEL_FORMAT_SET		      0x3A
#define ILI9341_CMD_WRITE_MEMORY_CONTINUE		        0x3C
#define ILI9341_CMD_READ_MEMORY_CONTINUE		        0x3E
#define ILI9341_CMD_SET_TEAR_SCANLINE			          0x44
#define ILI9341_CMD_GET_SCANLINE			              0x45
#define ILI9341_CMD_WRITE_DISPLAY_BRIGHTNESS		    0x51
#define ILI9341_CMD_READ_DISPLAY_BRIGHTNESS		      0x52
#define ILI9341_CMD_WRITE_CTRL_DISPLAY			        0x53
#define ILI9341_CMD_READ_CTRL_DISPLAY			          0x54
#define ILI9341_CMD_WRITE_CONTENT_ADAPT_BRIGHTNESS	0x55
#define ILI9341_CMD_READ_CONTENT_ADAPT_BRIGHTNESS	  0x56
#define ILI9341_CMD_WRITE_MIN_CAB_LEVEL			        0x5E
#define ILI9341_CMD_READ_MIN_CAB_LEVEL			        0x5F
#define ILI9341_CMD_READ_ID1				                0xDA
#define ILI9341_CMD_READ_ID2				                0xDB
#define ILI9341_CMD_READ_ID3				                0xDC

#define ILI9341_CMD_RGB_SIGNAL_CONTROL			        0xB0
#define ILI9341_CMD_FRAME_RATE_CONTROL_NORMAL		    0xB1
#define ILI9341_CMD_FRAME_RATE_CONTROL_IDLE_8COLOR	0xB2
#define ILI9341_CMD_FRAME_RATE_CONTROL_PARTIAL		  0xB3
#define ILI9341_CMD_DISPLAY_INVERSION_CONTROL		    0xB4
#define ILI9341_CMD_BLANKING_PORCH_CONTROL		      0xB5
#define ILI9341_CMD_DISPLAY_FUNCTION_CONTROL		    0xB6
#define ILI9341_CMD_ENTRY_MODE_SET			            0xB7
#define ILI9341_CMD_BACKLIGHT_CONTROL_1			        0xB8
#define ILI9341_CMD_BACKLIGHT_CONTROL_2			        0xB9
#define ILI9341_CMD_BACKLIGHT_CONTROL_3			        0xBA
#define ILI9341_CMD_BACKLIGHT_CONTROL_4			        0xBB
#define ILI9341_CMD_BACKLIGHT_CONTROL_5			        0xBC
#define ILI9341_CMD_BACKLIGHT_CONTROL_6			        0xBD
#define ILI9341_CMD_BACKLIGHT_CONTROL_7			        0xBE
#define ILI9341_CMD_BACKLIGHT_CONTROL_8			        0xBF
#define ILI9341_CMD_POWER_CONTROL_1			            0xC0
#define ILI9341_CMD_POWER_CONTROL_2			            0xC1
#define ILI9341_CMD_VCOM_CONTROL_1			            0xC5
#define ILI9341_CMD_VCOM_CONTROL_2                  0xC7
#define ILI9341_CMD_POWER_ON_SEQ_CONTROL		        0xCB
#define ILI9341_CMD_POWER_CONTROL_A			            0xCD
#define ILI9341_CMD_POWER_CONTROL_B			            0xCF
#define ILI9341_CMD_NVMEM_WRITE				              0xD0
#define ILI9341_CMD_NVMEM_PROTECTION_KEY		        0xD1
#define ILI9341_CMD_NVMEM_STATUS_READ			          0xD2
#define ILI9341_CMD_READ_ID4				                0xD3
#define ILI9341_CMD_POSITIVE_GAMMA_CORRECTION		    0xE0
#define ILI9341_CMD_NEGATIVE_GAMMA_CORRECTION		    0xE1
#define ILI9341_CMD_DIGITAL_GAMMA_CONTROL_1		      0xE2
#define ILI9341_CMD_DIGITAL_GAMMA_CONTROL_2		      0xE3
#define ILI9341_CMD_DRIVER_TIMING_CONTROL_A		      0xE8
#define ILI9341_CMD_DRIVER_TIMING_CONTROL_B		      0xEA
#define ILI9341_CMD_ENABLE_3_GAMMA_CONTROL          0xF2
#define ILI9341_CMD_INTERFACE_CONTROL			          0xF6
#define ILI9341_CMD_PUMP_RATIO_CONTROL			        0xF7

#define COLOR_BLACK     0x0000
#define COLOR_WHITE	    0xFFFF
#define COLOR_RED	      0xF800
#define COLOR_GREEN 	  0x07E0
#define COLOR_BLUE  	  0x001F
#define COLOR_YELLOW	  0xFFE0
#define COLOR_CYAN	    0x07FF
#define COLOR_MAGENTA 	0xF81F
#define COLOR_GRAY	    0x0821

#define MAX_X           240
#define MAX_Y           320

#define FONT_SPACE	    6
#define FONT_X		      8
#define FONT_Y		      8

#define PORTRAIT	      0
#define LANDSCAPE	      1

const static uint8_t __attribute__ ((progmem)) fonts[][8] = {
  {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x5F,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x07,0x00,0x07,0x00,0x00,0x00},
  {0x00,0x14,0x7F,0x14,0x7F,0x14,0x00,0x00},
  {0x00,0x24,0x2A,0x7F,0x2A,0x12,0x00,0x00},
  {0x00,0x23,0x13,0x08,0x64,0x62,0x00,0x00},
  {0x00,0x36,0x49,0x55,0x22,0x50,0x00,0x00},
  {0x00,0x00,0x05,0x03,0x00,0x00,0x00,0x00},
  {0x00,0x1C,0x22,0x41,0x00,0x00,0x00,0x00},
  {0x00,0x41,0x22,0x1C,0x00,0x00,0x00,0x00},
  {0x00,0x08,0x2A,0x1C,0x2A,0x08,0x00,0x00},
  {0x00,0x08,0x08,0x3E,0x08,0x08,0x00,0x00},
  {0x00,0xA0,0x60,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x08,0x08,0x08,0x08,0x08,0x00,0x00},
  {0x00,0x60,0x60,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x20,0x10,0x08,0x04,0x02,0x00,0x00},
  {0x00,0x3E,0x51,0x49,0x45,0x3E,0x00,0x00},
  {0x00,0x00,0x42,0x7F,0x40,0x00,0x00,0x00},
  {0x00,0x62,0x51,0x49,0x49,0x46,0x00,0x00},
  {0x00,0x22,0x41,0x49,0x49,0x36,0x00,0x00},
  {0x00,0x18,0x14,0x12,0x7F,0x10,0x00,0x00},
  {0x00,0x27,0x45,0x45,0x45,0x39,0x00,0x00},
  {0x00,0x3C,0x4A,0x49,0x49,0x30,0x00,0x00},
  {0x00,0x01,0x71,0x09,0x05,0x03,0x00,0x00},
  {0x00,0x36,0x49,0x49,0x49,0x36,0x00,0x00},
  {0x00,0x06,0x49,0x49,0x29,0x1E,0x00,0x00},
  {0x00,0x00,0x36,0x36,0x00,0x00,0x00,0x00},
  {0x00,0x00,0xAC,0x6C,0x00,0x00,0x00,0x00},
  {0x00,0x08,0x14,0x22,0x41,0x00,0x00,0x00},
  {0x00,0x14,0x14,0x14,0x14,0x14,0x00,0x00},
  {0x00,0x41,0x22,0x14,0x08,0x00,0x00,0x00},
  {0x00,0x02,0x01,0x51,0x09,0x06,0x00,0x00},
  {0x00,0x32,0x49,0x79,0x41,0x3E,0x00,0x00},
  {0x00,0x7E,0x09,0x09,0x09,0x7E,0x00,0x00},
  {0x00,0x7F,0x49,0x49,0x49,0x36,0x00,0x00},
  {0x00,0x3E,0x41,0x41,0x41,0x22,0x00,0x00},
  {0x00,0x7F,0x41,0x41,0x22,0x1C,0x00,0x00},
  {0x00,0x7F,0x49,0x49,0x49,0x41,0x00,0x00},
  {0x00,0x7F,0x09,0x09,0x09,0x01,0x00,0x00},
  {0x00,0x3E,0x41,0x41,0x51,0x72,0x00,0x00},
  {0x00,0x7F,0x08,0x08,0x08,0x7F,0x00,0x00},
  {0x00,0x41,0x7F,0x41,0x00,0x00,0x00,0x00},
  {0x00,0x20,0x40,0x41,0x3F,0x01,0x00,0x00},
  {0x00,0x7F,0x08,0x14,0x22,0x41,0x00,0x00},
  {0x00,0x7F,0x40,0x40,0x40,0x40,0x00,0x00},
  {0x00,0x7F,0x02,0x0C,0x02,0x7F,0x00,0x00},
  {0x00,0x7F,0x04,0x08,0x10,0x7F,0x00,0x00},
  {0x00,0x3E,0x41,0x41,0x41,0x3E,0x00,0x00},
  {0x00,0x7F,0x09,0x09,0x09,0x06,0x00,0x00},
  {0x00,0x3E,0x41,0x51,0x21,0x5E,0x00,0x00},
  {0x00,0x7F,0x09,0x19,0x29,0x46,0x00,0x00},
  {0x00,0x26,0x49,0x49,0x49,0x32,0x00,0x00},
  {0x00,0x01,0x01,0x7F,0x01,0x01,0x00,0x00},
  {0x00,0x3F,0x40,0x40,0x40,0x3F,0x00,0x00},
  {0x00,0x1F,0x20,0x40,0x20,0x1F,0x00,0x00},
  {0x00,0x3F,0x40,0x38,0x40,0x3F,0x00,0x00},
  {0x00,0x63,0x14,0x08,0x14,0x63,0x00,0x00},
  {0x00,0x03,0x04,0x78,0x04,0x03,0x00,0x00},
  {0x00,0x61,0x51,0x49,0x45,0x43,0x00,0x00},
  {0x00,0x7F,0x41,0x41,0x00,0x00,0x00,0x00},
  {0x00,0x02,0x04,0x08,0x10,0x20,0x00,0x00},
  {0x00,0x41,0x41,0x7F,0x00,0x00,0x00,0x00},
  {0x00,0x04,0x02,0x01,0x02,0x04,0x00,0x00},
  {0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00},
  {0x00,0x01,0x02,0x04,0x00,0x00,0x00,0x00},
  {0x00,0x20,0x54,0x54,0x54,0x78,0x00,0x00},
  {0x00,0x7F,0x48,0x44,0x44,0x38,0x00,0x00},
  {0x00,0x38,0x44,0x44,0x28,0x00,0x00,0x00},
  {0x00,0x38,0x44,0x44,0x48,0x7F,0x00,0x00},
  {0x00,0x38,0x54,0x54,0x54,0x18,0x00,0x00},
  {0x00,0x08,0x7E,0x09,0x02,0x00,0x00,0x00},
  {0x00,0x18,0xA4,0xA4,0xA4,0x7C,0x00,0x00},
  {0x00,0x7F,0x08,0x04,0x04,0x78,0x00,0x00},
  {0x00,0x00,0x7D,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x80,0x84,0x7D,0x00,0x00,0x00,0x00},
  {0x00,0x7F,0x10,0x28,0x44,0x00,0x00,0x00},
  {0x00,0x41,0x7F,0x40,0x00,0x00,0x00,0x00},
  {0x00,0x7C,0x04,0x18,0x04,0x78,0x00,0x00},
  {0x00,0x7C,0x08,0x04,0x7C,0x00,0x00,0x00},
  {0x00,0x38,0x44,0x44,0x38,0x00,0x00,0x00},
  {0x00,0xFC,0x24,0x24,0x18,0x00,0x00,0x00},
  {0x00,0x18,0x24,0x24,0xFC,0x00,0x00,0x00},
  {0x00,0x00,0x7C,0x08,0x04,0x00,0x00,0x00},
  {0x00,0x48,0x54,0x54,0x24,0x00,0x00,0x00},
  {0x00,0x04,0x7F,0x44,0x00,0x00,0x00,0x00},
  {0x00,0x3C,0x40,0x40,0x7C,0x00,0x00,0x00},
  {0x00,0x1C,0x20,0x40,0x20,0x1C,0x00,0x00},
  {0x00,0x3C,0x40,0x30,0x40,0x3C,0x00,0x00},
  {0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00},
  {0x00,0x1C,0xA0,0xA0,0x7C,0x00,0x00,0x00},
  {0x00,0x44,0x64,0x54,0x4C,0x44,0x00,0x00},
  {0x00,0x08,0x36,0x41,0x00,0x00,0x00,0x00},
  {0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00},
  {0x00,0x41,0x36,0x08,0x00,0x00,0x00,0x00},
  {0x00,0x02,0x01,0x01,0x02,0x01,0x00,0x00},
  {0x00,0x02,0x05,0x05,0x02,0x00,0x00,0x00},
  {0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00}
};

uint16_t maxX, maxY;
uint8_t setOrientation;
  
void ILI9341_sendCommand(uint8_t cmd);
void ILI9341_sendData(uint8_t data);
void ILI9341_sendData16(uint16_t data);
void ILI9341_Init() ;
void ILI9341_setX(uint16_t x0, uint16_t x1);
void ILI9341_setY(uint16_t y0, uint16_t y1);
void ILI9341_setOrientation(uint8_t orientation);
void ILI9341_setXY(uint16_t x0, uint16_t y0);
void ILI9341_pixel(uint16_t x0, uint16_t y0, uint16_t color);
void ILI9341_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1, uint16_t color);
void ILI9341_hLine(uint16_t x0, uint16_t y0, uint16_t length, uint16_t color);
void ILI9341_vLine(uint16_t x0, uint16_t y0, uint16_t length, uint16_t color);
void ILI9341_rectangle(uint16_t x0, uint16_t y0, uint16_t length, uint16_t width, uint16_t color);
void ILI9341_fillRectangle(uint16_t x0, uint16_t y0, uint16_t length, uint16_t width, uint16_t color);
void ILI9341_circle(int x0, int y0, int r, uint16_t color);
void ILI9341_fillCircle(int x0, int y0, int r, uint16_t color);
void ILI9341_char(uint8_t ascii, uint16_t x0, uint16_t y0, uint16_t size, uint16_t fgColor);
void ILI9341_string(char *string, uint16_t x0, uint16_t y0, uint16_t size, uint16_t fgColor);
uint8_t ILI9341_number(uint16_t longNumber, uint16_t x0, uint16_t y0, uint16_t size, uint16_t fgColor);
uint8_t ILI9341_float(float floatNumber, uint16_t x0, uint16_t y0, uint16_t size, uint16_t fgColor);
void ILI9341_clr(uint16_t x0, uint16_t y0, uint16_t size);
void ILI9341_clrLine(uint16_t y0, uint16_t size);
void ILI9341_background(uint16_t color);
void ILI9341_arc(int x, int y, int r, int startAngle, int endAngle, int thickness, uint16_t color);

#endif